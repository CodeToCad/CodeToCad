{%- from 'generate_method_definition.j2' import generate_parameters -%}

{%- macro generate_init_constructor(capabilities_loader, class_name, capabilities_method, parameters, use_abstract_method_decorator)%}

    {{"@abstractmethod\n" if use_abstract_method_decorator and not capabilities_method.is_static_method}}
    def __init__(
        self,
        {%for parameter in parameters -%} 
        {{generate_parameters(capabilities_loader, capabilities_method, parameter)}}
        {{-", " if not loop.last}} 
        {%-endfor%}
    ):
        {%for parameter in parameters%} 
        self.{{parameter.name}} = {{parameter.name}}
        {%-endfor%}


{%- endmacro %}
